security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    # enable_authenticator_manager: true

    password_hashers:
        # https://symfony.com/doc/current/security.html#c-hashing-passwords
        # Use native password hasher, which auto-selects and migrates the best
        # possible hashing algorithm (starting from Symfony 5.3 this is "bcrypt")
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            lexik_jwt:
                class: App\Entity\User
            # entity:
            #     class: App\Entity\User
            #     property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login_check:
            pattern:    ^/api/v1/login_check
            lazy: true
            stateless:  true

        firewall_api_miw:
            pattern:    ^/api/v1
            stateless:  true
            lazy: true
            provider:   app_user_provider
            jwt: ~ # enables the jwt authenticator

        main:
            # The lazy anonymous mode prevents the session from being started
            # if there is no need for authorization
            lazy: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
